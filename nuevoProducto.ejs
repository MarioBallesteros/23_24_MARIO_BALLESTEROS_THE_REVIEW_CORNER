<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <!--favicon-->
  <link rel="icon" href="imagenes/logo.png" type="image/png" />
  <!--plugins-->
  <link href="css/cssNewProduct/imageuploadify.min.css" rel="stylesheet" />
  <!-- Bootstrap CSS -->
  <link href="css/cssNewProduct/bootstrap.min.css" rel="stylesheet">
  <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;500&display=swap" rel="stylesheet">
  <link href="css/cssNewProduct/app.css" rel="stylesheet">
  <!-- Boxicons CDN Link -->
  <link href='https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css' rel='stylesheet'>
  <title>Crear Nuevo Producto</title>
  <link rel="stylesheet" type="text/css" href="css/css.css" />
  <!-- Custom CSS Link -->
  <link rel="stylesheet" href="./css/style.css" />
  <!-- Bootstrap CSS 2-->
  <link href="https://netdna.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css" rel="stylesheet">
  <link rel="stylesheet" type="text/css" href="css/cssProduct.css" />

  <script type="module">
    import { initializeApp } from 'https://www.gstatic.com/firebasejs/9.1.1/firebase-app.js';
    import { getFirestore, collection, doc, setDoc, query, orderBy, limit, getDocs } from 'https://www.gstatic.com/firebasejs/9.1.1/firebase-firestore.js';

    const firebaseConfig = {
      apiKey: "AIzaSyCRLXwlOR3NThFqqi1KqzORUFimt5ngOf0",
      authDomain: "the-review-corner.firebaseapp.com",
      projectId: "the-review-corner",
      storageBucket: "the-review-corner.appspot.com",
      messagingSenderId: "639567467813",
      appId: "1:639567467813:web:437f189e0df405e4e7b6cc",
      measurementId: "G-MEL1Z69T4M"
    };

    const app = initializeApp(firebaseConfig);
    const db = getFirestore(app);

    async function loadFieldsForCategory(category) {
      console.log('Categoría seleccionada:', category);
      const categoriaRef = collection(db, `categoria/${category}/productos`);
      const q = query(categoriaRef, limit(1));
      
      try {
        const querySnapshot = await getDocs(q);
        console.log('Query snapshot:', querySnapshot);

        if (!querySnapshot.empty) {
          const productData = querySnapshot.docs[0].data();
          console.log('Datos del producto:', productData);
          const formContainer = document.getElementById('dynamicFields');
          formContainer.innerHTML = '';

          for (const key in productData) {
            if (key !== 'id') {
              const fieldDiv = document.createElement('div');
              fieldDiv.className = 'mb-3';

              const label = document.createElement('label');
              label.className = 'form-label';
              label.for = `input${key.charAt(0).toUpperCase() + key.slice(1)}`;
              label.innerText = key.charAt(0).toUpperCase() + key.slice(1);
              fieldDiv.appendChild(label);

              if (key === 'descripcion') {
                const textarea = document.createElement('textarea');
                textarea.className = 'form-control';
                textarea.id = `input${key.charAt(0).toUpperCase() + key.slice(1)}`;
                textarea.rows = 3;
                fieldDiv.appendChild(textarea);
              } else {
                const input = document.createElement('input');
                input.type = 'text';
                input.className = 'form-control';
                input.id = `input${key.charAt(0).toUpperCase() + key.slice(1)}`;
                fieldDiv.appendChild(input);
              }

              formContainer.appendChild(fieldDiv);
            }
          }

          const imagesDiv = document.createElement('div');
          imagesDiv.className = 'mb-3';

          const imagesLabel = document.createElement('label');
          imagesLabel.className = 'form-label';
          imagesLabel.innerText = 'Imágenes del Producto';
          imagesDiv.appendChild(imagesLabel);

          const imagesInput = document.createElement('input');
          imagesInput.type = 'file';
          imagesInput.id = 'image-uploadify';
          imagesInput.accept = 'image/*';
          imagesInput.multiple = true;
          imagesDiv.appendChild(imagesInput);

          formContainer.appendChild(imagesDiv);

          $('#image-uploadify').imageuploadify();
        } else {
          console.log('No hay productos en esta categoría.');
        }
      } catch (error) {
        console.error('Error al cargar los campos para la categoría:', error);
      }
    }

    async function saveProduct() {
  const formContainer = document.getElementById('dynamicFields');
  const inputs = formContainer.querySelectorAll('input, textarea');
  const productData = {};

  inputs.forEach(input => {
    const key = input.id.replace('input', '').charAt(0).toLowerCase() + input.id.replace('input', '').slice(1);
    productData[key] = input.value;
  });

  const category = document.getElementById('inputProductType').value;

  if (!category) {
    alert('Debe seleccionar una categoría.');
    return;
  }

  const categoriaRef = collection(db, `categoria/${category}/productos`);
  const q = query(categoriaRef, orderBy('__name__', 'desc'), limit(1));

  try {
    const querySnapshot = await getDocs(q);
    let newId = '1'; // Asumiendo que el ID es un string y empezamos en '1'

    if (!querySnapshot.empty) {
      const lastDocId = querySnapshot.docs[0].id;
      newId = String(parseInt(lastDocId) + 1); // Incrementa el último ID encontrado
    }

    const productoRef = doc(db, `categoria/${category}/productos`, newId);
    await setDoc(productoRef, productData);

    alert('Producto guardado exitosamente');
    window.location.href = '/explorar';
  } catch (error) {
    console.error('Error guardando el producto:', error);
    alert('Error al guardar el producto');
  }
}

    document.addEventListener('DOMContentLoaded', () => {
      document.getElementById('saveProductButton').onclick = saveProduct;
      document.getElementById('inputProductType').onchange = (e) => {
        loadFieldsForCategory(e.target.value);
      };
    });
  </script>
</head>
<body>
  <div class="wrapper">
    <div class="page-wrapper">
      <div class="page-content">
        <div class="card">
          <div class="card-body p-4">
            <div class="container">
              <a class="navbar-brand" href="#"><img class="logoHeaderNewProduct" src="./imagenes/logo.png" /></a>
              <button class="navbar-toggler" type="button" data-bs-toggle="collapse"
                data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent"
                aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
              </button>
              <div class="collapse navbar-collapse" id="navbarSupportedContent">
                <ul class="navbar-nav ms-auto mb-2 mb-lg-0">
                  <li class="nav-item">
                    <a href="index.html" class="botonVolver nav-link fw-bold shadow s-d text-black btn-sm pd-btn btn">Volver</a>
                  </li>
                </ul>
              </div>
            </div>
          </div>
        </div>
        <div class="card">
          <div class="card-body p-4">
            <h5 class="card-title">Añadir Nuevo Producto</h5>
            <hr />
            <div class="form-body mt-4">
              <div class="row">
                <div class="col-lg-8">
                  <div class="border border-3 p-4 rounded" id="dynamicFields">
                    <!-- Campos dinámicos se cargarán aquí -->
                  </div>
                </div>
                <div class="col-lg-4">
                  <div class="border border-3 p-4 rounded">
                    <div class="row g-3">
                      <div class="col-12">
                        <label for="inputProductType" class="form-label">Categoría</label>
                        <select class="form-select" id="inputProductType">
                          <% categorias.forEach(categoria => { %>
                            <option value="<%= categoria %>"><%= categoria %></option>
                          <% }); %>
                        </select>
                      </div>
                      <div class="col-12">
                        <div class="d-grid">
                          <button type="button" class="btn btn-primary" id="saveProductButton">Guardar Producto</button>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
              <!--end row-->
            </div>
          </div>
        </div>
      </div>
    </div>
    <!--end page wrapper -->
    <footer class="page-footer">
      <p class="mb-0">Copyright © 2021. All right reserved.</p>
    </footer>
  </div>
  <!--plugins-->
  <script src="css/cssNewProduct/js/jquery.min.js"></script>
  <script src="css/cssNewProduct/js/imageuploadify.min.js"></script>
  <script>
    $(document).ready(function () {
      $('#image-uploadify').imageuploadify();
    });
  </script>
</body>
</html>